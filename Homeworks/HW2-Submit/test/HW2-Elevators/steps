IO scheduler
Developing your solution on the virtual machine
Develop your solution based off the currect FIFO (noop) implementation currently in the block directory. 
You will be required to write a new file titled sstf-iosched.c.make a copy of noop-iosched.c, call it sstf-iosched.c, and do a find/replace all instances of noop to sstf.
Add some contents to the kconfig.iosched file in the block directory to get the file to compile
_________________
LOOK Scheduler
Elevator algorithm
Choose either both directions of travel or only servicing in one direction (LOOK or C-LOOK)
LOOK services requests in both directions, while C-LOOK only services requests in the upwards direction.
Don't forget to MERGE. Either front or back, not both.
There will be at least 2 sorts involved.
Maintain the queue in sorted order, use insertion sort.
___________________
Disabling virtio
In hw1, we have qemu-system-i386 -gdb tcp::???? -S -nographic -kernel bzImage-qemux86.bin -drive file=core-image-lsb-sdk-qemux86.ext3,if=virtio -enable-kvm -net none -usb -localtime --no-reboot --append "root=/dev/vda rw console=ttyS0 debug"
New : qemu-system-i386 -gdb tcp::???? -S -nographic -kernel bzImage-qemux86.bin -drive file=core-image-lsb-sdk-qemux86.ext3 -enable-kvm -net none -usb -localtime --no-reboot --append "root=/dev/hda rw console=ttyS0 debug"
specifically it is removing “,if=virtio” and changing “root=/dev/vda” to “root=/dev/sda”
Removing virtio will cause a segfault during boot
To solve this, change sda -> hda
___________________
Test your kernel
generate some I/O. Write a script that does this WHICH RUNS ON THE VM
Outputting sector numbers in requested order is a good first step 
In order to select this scheduler, either pass it as a command line option or use the /sys/block/hdc/queue/scheduler file at run time
Ensure you are using the kernel they built, or this won’t work.
