\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cm}{/*}
\PYG{c+cm}{	OSU \PYGZhy{} CS444}
\PYG{c+cm}{	Homework 1 \PYGZhy{} Concurrency}
\PYG{c+cm}{	Behnam Saeedi, Levi Willmeth, Zhaoheng Wang}
\PYG{c+cm}{*/}

\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}unistd.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}mt19937ar.c\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}pthread.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}stdio.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}stdlib.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}sys/types.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}sys/syscall.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}fstream\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}iostream\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}color.h\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}define MAXBUFFER 32}
\PYG{c+cp}{\PYGZsh{}define MAXCYCLES 5}
\PYG{n}{pthread\PYGZus{}mutex\PYGZus{}t} \PYG{n}{bufferLock}\PYG{p}{;}

\PYG{k}{struct} \PYG{n}{bufferItem}\PYG{p}{\PYGZob{}}
	\PYG{k+kt}{int} \PYG{n}{number}\PYG{p}{;}
	\PYG{k+kt}{int} \PYG{n}{consumer\PYGZus{}sleep}\PYG{p}{;}
\PYG{p}{\PYGZcb{};}

\PYG{k}{struct} \PYG{n}{bufferItem} \PYG{n}{buffer}\PYG{p}{[}\PYG{n}{MAXBUFFER}\PYG{p}{];}
\PYG{k}{volatile} \PYG{k+kt}{int} \PYG{n}{bufferIndex} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}

\PYG{k+kt}{int} \PYG{n+nf}{getRandomInt}\PYG{p}{()\PYGZob{}}
	\PYG{k+kt}{unsigned} \PYG{k+kt}{int} \PYG{n}{eax}\PYG{p}{;}
	\PYG{k+kt}{unsigned} \PYG{k+kt}{int} \PYG{n}{ebx}\PYG{p}{;}
	\PYG{k+kt}{unsigned} \PYG{k+kt}{int} \PYG{n}{ecx}\PYG{p}{;}
	\PYG{k+kt}{unsigned} \PYG{k+kt}{int} \PYG{n}{edx}\PYG{p}{;}
	\PYG{k+kt}{int} \PYG{n}{num}\PYG{p}{;}

	\PYG{n}{eax} \PYG{o}{=} \PYG{l+m+mh}{0x01}\PYG{p}{;}

	\PYG{n}{\PYGZus{}\PYGZus{}asm\PYGZus{}\PYGZus{}} \PYG{n}{\PYGZus{}\PYGZus{}volatile\PYGZus{}\PYGZus{}}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}cpuid;\PYGZdq{}}
			 \PYG{o}{:} \PYG{l+s}{\PYGZdq{}=a\PYGZdq{}}\PYG{p}{(}\PYG{n}{eax}\PYG{p}{),} \PYG{l+s}{\PYGZdq{}=b\PYGZdq{}}\PYG{p}{(}\PYG{n}{ebx}\PYG{p}{),} \PYG{l+s}{\PYGZdq{}=c\PYGZdq{}}\PYG{p}{(}\PYG{n}{ecx}\PYG{p}{),} \PYG{l+s}{\PYGZdq{}=d\PYGZdq{}}\PYG{p}{(}\PYG{n}{edx}\PYG{p}{)}
			 \PYG{o}{:} \PYG{l+s}{\PYGZdq{}a\PYGZdq{}}\PYG{p}{(}\PYG{n}{eax}\PYG{p}{)}
			 \PYG{p}{);}

	\PYG{k}{if}\PYG{p}{(}\PYG{n}{ecx} \PYG{o}{\PYGZam{}} \PYG{l+m+mh}{0x40000000}\PYG{p}{)\PYGZob{}}
	\PYG{n}{\PYGZus{}\PYGZus{}asm\PYGZus{}\PYGZus{}} \PYG{n}{\PYGZus{}\PYGZus{}volatile\PYGZus{}\PYGZus{}}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}rdrand \PYGZpc{}0\PYGZdq{}}
			\PYG{o}{:}\PYG{l+s}{\PYGZdq{}=r\PYGZdq{}} \PYG{p}{(}\PYG{n}{num}\PYG{p}{)}
			\PYG{p}{);}
	\PYG{k}{return} \PYG{n}{abs}\PYG{p}{(}\PYG{n}{num}\PYG{p}{);}
	\PYG{p}{\PYGZcb{}}
	\PYG{k}{else}\PYG{p}{\PYGZob{}}
	\PYG{n}{num} \PYG{o}{=} \PYG{n}{genrand\PYGZus{}int32}\PYG{p}{();}
	\PYG{k}{return} \PYG{n}{num}\PYG{p}{;}
	\PYG{p}{\PYGZcb{}}

\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void} \PYG{o}{*}\PYG{n+nf}{producer}\PYG{p}{(}\PYG{k+kt}{void} \PYG{o}{*}\PYG{n}{tid\PYGZus{}x}\PYG{p}{)\PYGZob{}}
	\PYG{c+c1}{// Produces items and puts them in the buffer.}
	\PYG{k+kt}{pid\PYGZus{}t} \PYG{n}{tid} \PYG{o}{=} \PYG{n}{syscall}\PYG{p}{(}\PYG{n}{SYS\PYGZus{}gettid}\PYG{p}{);}
	\PYG{k+kt}{int} \PYG{n}{rand\PYGZus{}num}\PYG{p}{,} \PYG{n}{cons\PYGZus{}sleep\PYGZus{}time}\PYG{p}{,} \PYG{n}{prod\PYGZus{}sleep\PYGZus{}time}\PYG{p}{;}
	\PYG{k}{struct} \PYG{n}{bufferItem} \PYG{n}{newItem}\PYG{p}{;}
	\PYG{n}{printf}\PYG{p}{(}\PYG{n}{ANSI\PYGZus{}COLOR\PYGZus{}GREEN}\PYG{l+s}{\PYGZdq{}Starting producer thread}
    					\PYG{o}{\PYGZpc{}}\PYG{n}{d}\PYG{p}{..}\PYG{err}{\PYGZbs{}}\PYG{n}{n}\PYG{l+s}{\PYGZdq{}ANSI\PYGZus{}COLOR\PYGZus{}RESET, tid);}

	\PYG{c+c1}{// To\PYGZhy{}do: end this thread eventually (not specified?)}
	\PYG{k}{for}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{i}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;} \PYG{n}{i}\PYG{o}{\PYGZlt{}}\PYG{n}{MAXCYCLES}\PYG{p}{;} \PYG{n}{i}\PYG{o}{++}\PYG{p}{)}
	\PYG{p}{\PYGZob{}}
		\PYG{c+c1}{// Make a new item for the buffer}
		\PYG{n}{rand\PYGZus{}num} \PYG{o}{=} \PYG{n}{getRandomInt}\PYG{p}{();}\PYG{c+c1}{// value inside the item}
		\PYG{n}{cons\PYGZus{}sleep\PYGZus{}time} \PYG{o}{=} \PYG{n}{getRandomInt}\PYG{p}{()} \PYG{o}{\PYGZpc{}} \PYG{l+m+mi}{7}\PYG{o}{+}\PYG{l+m+mi}{2}\PYG{p}{;} \PYG{c+c1}{// consumer sleeps 2\PYGZhy{}9 sec}
		\PYG{n}{prod\PYGZus{}sleep\PYGZus{}time} \PYG{o}{=} \PYG{n}{getRandomInt}\PYG{p}{()} \PYG{o}{\PYGZpc{}} \PYG{l+m+mi}{3}\PYG{o}{+}\PYG{l+m+mi}{4}\PYG{p}{;} \PYG{c+c1}{// producer sleeps for 3\PYGZhy{}7 sec}
		\PYG{n}{newItem}\PYG{p}{.}\PYG{n}{number} \PYG{o}{=} \PYG{n}{rand\PYGZus{}num}\PYG{p}{;}
		\PYG{n}{newItem}\PYG{p}{.}\PYG{n}{consumer\PYGZus{}sleep}\PYG{o}{=}\PYG{n}{cons\PYGZus{}sleep\PYGZus{}time}\PYG{p}{;}	\PYG{c+c1}{// package into a struct}

		\PYG{n}{printf}\PYG{p}{(}\PYG{n}{ANSI\PYGZus{}COLOR\PYGZus{}GREEN}\PYG{l+s}{\PYGZdq{}Producer\PYGZdq{}}\PYG{n}{ANSI\PYGZus{}COLOR\PYGZus{}RESET}\PYG{l+s}{\PYGZdq{}}
        			\PYG{p}{(}\PYG{o}{\PYGZpc{}}\PYG{n}{d}\PYG{p}{)} \PYG{n}{sleeping} \PYG{k}{for} \PYG{o}{\PYGZpc{}}\PYG{n}{d} \PYG{n}{seconds}\PYG{p}{.}\PYG{err}{\PYGZbs{}}\PYG{n}{n}\PYG{l+s}{\PYGZdq{}, tid, prod\PYGZus{}sleep\PYGZus{}time);}
		\PYG{n}{sleep}\PYG{p}{(}\PYG{n}{prod\PYGZus{}sleep\PYGZus{}time}\PYG{p}{);}

		\PYG{c+c1}{// Produce exactly one item for every sleep cycle}
		\PYG{k+kt}{bool} \PYG{n}{has\PYGZus{}produced} \PYG{o}{=} \PYG{n+nb}{false}\PYG{p}{;}
		\PYG{k}{while}\PYG{p}{(}\PYG{o}{!}\PYG{n}{has\PYGZus{}produced}\PYG{p}{)\PYGZob{}}
		        \PYG{c+c1}{// Ensure the buffer is not full before producing}
			\PYG{n}{pthread\PYGZus{}mutex\PYGZus{}lock}\PYG{p}{(}\PYG{o}{\PYGZam{}}\PYG{n}{bufferLock}\PYG{p}{);}
			\PYG{k}{if}\PYG{p}{(}\PYG{n}{bufferIndex}\PYG{o}{\PYGZgt{}=}\PYG{n}{MAXBUFFER}\PYG{p}{)\PYGZob{}}
				\PYG{c+c1}{// Release lock and try again later}
				\PYG{n}{pthread\PYGZus{}mutex\PYGZus{}unlock}\PYG{p}{(}\PYG{o}{\PYGZam{}}\PYG{n}{bufferLock}\PYG{p}{);}
	                	\PYG{k}{continue}\PYG{p}{;}
			\PYG{p}{\PYGZcb{}}
			\PYG{n}{printf}\PYG{p}{(}\PYG{n}{ANSI\PYGZus{}COLOR\PYGZus{}GREEN}\PYG{l+s}{\PYGZdq{}Producer\PYGZdq{}}\PYG{n}{ANSI\PYGZus{}COLOR\PYGZus{}RESET}\PYG{l+s}{\PYGZdq{}}
            				\PYG{p}{(}\PYG{o}{\PYGZpc{}}\PYG{n}{d}\PYG{p}{)} \PYG{n}{waking} \PYG{n}{up}\PYG{p}{..}\PYG{err}{\PYGZbs{}}\PYG{n}{n}\PYG{l+s}{\PYGZdq{}, tid);}
			\PYG{n}{printf}\PYG{p}{(}\PYG{n}{ANSI\PYGZus{}COLOR\PYGZus{}GREEN}\PYG{l+s}{\PYGZdq{}Producer\PYGZdq{}}\PYG{n}{ANSI\PYGZus{}COLOR\PYGZus{}RESET}\PYG{l+s}{\PYGZdq{}}
            				\PYG{p}{(}\PYG{o}{\PYGZpc{}}\PYG{n}{d}\PYG{p}{)} \PYG{n}{has} \PYG{n}{the} \PYG{n}{buffer}\PYG{p}{.} \PYG{o}{\PYGZpc{}}\PYG{n}{d}\PYG{err}{\PYGZbs{}}\PYG{n}{n}\PYG{l+s}{\PYGZdq{}, tid, bufferIndex);}
			\PYG{n}{buffer}\PYG{p}{[}\PYG{n}{bufferIndex}\PYG{p}{]} \PYG{o}{=} \PYG{n}{newItem}\PYG{p}{;}
			\PYG{k}{if}\PYG{p}{(}\PYG{n}{bufferIndex} \PYG{o}{\PYGZlt{}} \PYG{n}{MAXBUFFER} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{)}
        	        	\PYG{n}{bufferIndex}\PYG{o}{++}\PYG{p}{;}
			\PYG{n}{pthread\PYGZus{}mutex\PYGZus{}unlock}\PYG{p}{(}\PYG{o}{\PYGZam{}}\PYG{n}{bufferLock}\PYG{p}{);}
			\PYG{n}{printf}\PYG{p}{(}\PYG{n}{ANSI\PYGZus{}COLOR\PYGZus{}GREEN}\PYG{l+s}{\PYGZdq{}Producer\PYGZdq{}}\PYG{n}{ANSI\PYGZus{}COLOR\PYGZus{}RESET}\PYG{l+s}{\PYGZdq{}}
            			\PYG{p}{(}\PYG{o}{\PYGZpc{}}\PYG{n}{d}\PYG{p}{)} \PYG{n}{relenquished} \PYG{n}{the} \PYG{n}{buffer}\PYG{p}{.}\PYG{err}{\PYGZbs{}}\PYG{n}{n}\PYG{l+s}{\PYGZdq{}, tid);}
			\PYG{n}{has\PYGZus{}produced} \PYG{o}{=} \PYG{n+nb}{true}\PYG{p}{;}
		\PYG{p}{\PYGZcb{}}
	\PYG{p}{\PYGZcb{}}
	\PYG{n}{printf}\PYG{p}{(}\PYG{n}{ANSI\PYGZus{}COLOR\PYGZus{}GREEN}\PYG{l+s}{\PYGZdq{}Producer\PYGZdq{}}\PYG{n}{ANSI\PYGZus{}COLOR\PYGZus{}RED}\PYG{l+s}{\PYGZdq{}}
    				\PYG{p}{(}\PYG{o}{\PYGZpc{}}\PYG{n}{d}\PYG{p}{)} \PYG{n}{is} \PYG{n}{done}\PYG{p}{.}\PYG{err}{\PYGZbs{}}\PYG{n}{n}\PYG{l+s}{\PYGZdq{}ANSI\PYGZus{}COLOR\PYGZus{}RESET, tid);}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void} \PYG{o}{*}\PYG{n}{consumer}\PYG{p}{(}\PYG{k+kt}{void} \PYG{o}{*}\PYG{n}{tid\PYGZus{}x}\PYG{p}{)\PYGZob{}}
	\PYG{c+c1}{// Consumes items out of the buffer.}
	\PYG{k+kt}{pid\PYGZus{}t} \PYG{n}{tid} \PYG{o}{=} \PYG{n}{syscall}\PYG{p}{(}\PYG{n}{SYS\PYGZus{}gettid}\PYG{p}{);}
	\PYG{n}{printf}\PYG{p}{(}\PYG{n}{ANSI\PYGZus{}COLOR\PYGZus{}YELLOW}\PYG{l+s}{\PYGZdq{}Starting consumer thread}
    					\PYG{o}{\PYGZpc{}}\PYG{n}{d}\PYG{p}{.}\PYG{err}{\PYGZbs{}}\PYG{n}{n}\PYG{l+s}{\PYGZdq{}ANSI\PYGZus{}COLOR\PYGZus{}RESET, tid);}
	\PYG{n}{bufferItem} \PYG{n}{consumedItem}\PYG{p}{;}
	\PYG{c+c1}{// To\PYGZhy{}do: end this thread eventually (not specified?)}
	\PYG{k}{for}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{i}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;} \PYG{n}{i}\PYG{o}{\PYGZlt{}}\PYG{n}{MAXCYCLES}\PYG{p}{;} \PYG{n}{i}\PYG{o}{++}\PYG{p}{)\PYGZob{}}
        \PYG{n}{printf}\PYG{p}{(}\PYG{n}{ANSI\PYGZus{}COLOR\PYGZus{}YELLOW}\PYG{l+s}{\PYGZdq{}Consumer\PYGZdq{}}\PYG{n}{ANSI\PYGZus{}COLOR\PYGZus{}RESET}\PYG{l+s}{\PYGZdq{}}
        				\PYG{n}{beginning} \PYG{n}{to} \PYG{n}{consume}\PYG{p}{.}\PYG{err}{\PYGZbs{}}\PYG{n}{n}\PYG{l+s}{\PYGZdq{});}
		\PYG{c+c1}{// Consume exactly one item for every sleep cycle}
		\PYG{k+kt}{bool} \PYG{n}{has\PYGZus{}consumed} \PYG{o}{=} \PYG{n+nb}{false}\PYG{p}{;}
		\PYG{k}{do}\PYG{p}{\PYGZob{}}
			\PYG{c+c1}{// Ensure the buffer has something in it before consuming}
			\PYG{n}{pthread\PYGZus{}mutex\PYGZus{}lock}\PYG{p}{(}\PYG{o}{\PYGZam{}}\PYG{n}{bufferLock}\PYG{p}{);}
			\PYG{k}{if}\PYG{p}{(}\PYG{n}{bufferIndex}\PYG{o}{\PYGZlt{}=}\PYG{l+m+mi}{0}\PYG{p}{)\PYGZob{}}
				\PYG{c+c1}{// Release lock and try again later}
				\PYG{n}{pthread\PYGZus{}mutex\PYGZus{}unlock}\PYG{p}{(}\PYG{o}{\PYGZam{}}\PYG{n}{bufferLock}\PYG{p}{);}
				\PYG{k}{continue}\PYG{p}{;}
			\PYG{p}{\PYGZcb{}}
			\PYG{n}{printf}\PYG{p}{(}\PYG{n}{ANSI\PYGZus{}COLOR\PYGZus{}YELLOW}\PYG{l+s}{\PYGZdq{}Consumer\PYGZdq{}}\PYG{n}{ANSI\PYGZus{}COLOR\PYGZus{}RESET}\PYG{l+s}{\PYGZdq{}}
            				\PYG{p}{(}\PYG{o}{\PYGZpc{}}\PYG{n}{d}\PYG{p}{)} \PYG{n}{has} \PYG{n}{the} \PYG{n}{buffer}\PYG{p}{.} \PYG{o}{\PYGZpc{}}\PYG{n}{d}\PYG{err}{\PYGZbs{}}\PYG{n}{n}\PYG{l+s}{\PYGZdq{}, tid, bufferIndex);}
			\PYG{c+c1}{// Take an item out of the buffer and consume (discard) it}
			\PYG{n}{consumedItem} \PYG{o}{=} \PYG{n}{buffer}\PYG{p}{[}\PYG{n}{bufferIndex}\PYG{p}{];}
			\PYG{n}{buffer}\PYG{p}{[}\PYG{n}{bufferIndex}\PYG{p}{].}\PYG{n}{number}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;}
			\PYG{n}{buffer}\PYG{p}{[}\PYG{n}{bufferIndex}\PYG{p}{].}\PYG{n}{consumer\PYGZus{}sleep} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
			\PYG{n}{bufferIndex}\PYG{o}{\PYGZhy{}\PYGZhy{}}\PYG{p}{;}
			\PYG{n}{pthread\PYGZus{}mutex\PYGZus{}unlock}\PYG{p}{(}\PYG{o}{\PYGZam{}}\PYG{n}{bufferLock}\PYG{p}{);}
			\PYG{n}{printf}\PYG{p}{(}\PYG{n}{ANSI\PYGZus{}COLOR\PYGZus{}YELLOW}\PYG{l+s}{\PYGZdq{}Consumer\PYGZdq{}}\PYG{n}{ANSI\PYGZus{}COLOR\PYGZus{}RESET}\PYG{l+s}{\PYGZdq{}}
            			\PYG{p}{(}\PYG{o}{\PYGZpc{}}\PYG{n}{d}\PYG{p}{)} \PYG{n}{consumed} \PYG{n}{and} \PYG{n}{relenquished} \PYG{n}{the} \PYG{n}{buffer}\PYG{p}{.}\PYG{err}{\PYGZbs{}}\PYG{n}{n}\PYG{l+s}{\PYGZdq{}, tid);}
			\PYG{n}{has\PYGZus{}consumed} \PYG{o}{=} \PYG{n+nb}{true}\PYG{p}{;}
		\PYG{p}{\PYGZcb{}}\PYG{k}{while}\PYG{p}{(}\PYG{o}{!}\PYG{n}{has\PYGZus{}consumed}\PYG{p}{);}
		\PYG{n}{printf}\PYG{p}{(}\PYG{n}{ANSI\PYGZus{}COLOR\PYGZus{}YELLOW}\PYG{l+s}{\PYGZdq{}Consumer\PYGZdq{}}\PYG{n}{ANSI\PYGZus{}COLOR\PYGZus{}CYAN}\PYG{l+s}{\PYGZdq{}}
        			\PYG{p}{(}\PYG{o}{\PYGZpc{}}\PYG{n}{d}\PYG{p}{)} \PYG{n}{sleeping} \PYG{k}{for} \PYG{o}{\PYGZpc{}}\PYG{n}{d} \PYG{n}{seconds}\PYG{p}{.}\PYG{err}{\PYGZbs{}}\PYG{n}{n}\PYG{l+s}{\PYGZdq{}ANSI\PYGZus{}COLOR\PYGZus{}RESET,tid,}
        			\PYG{n}{consumedItem}\PYG{p}{.}\PYG{n}{consumer\PYGZus{}sleep}\PYG{p}{);}
		\PYG{n}{sleep}\PYG{p}{(}\PYG{n}{consumedItem}\PYG{p}{.}\PYG{n}{consumer\PYGZus{}sleep}\PYG{p}{);}
		\PYG{n}{printf}\PYG{p}{(}\PYG{n}{ANSI\PYGZus{}COLOR\PYGZus{}YELLOW}\PYG{l+s}{\PYGZdq{}Consumer\PYGZdq{}}\PYG{n}{ANSI\PYGZus{}COLOR\PYGZus{}RESET}\PYG{l+s}{\PYGZdq{}}
        			\PYG{p}{(}\PYG{o}{\PYGZpc{}}\PYG{n}{d}\PYG{p}{)} \PYG{n}{waking} \PYG{n}{up}\PYG{p}{..}\PYG{err}{\PYGZbs{}}\PYG{n}{n}\PYG{l+s}{\PYGZdq{}, tid);}
	\PYG{p}{\PYGZcb{}}
	\PYG{n}{printf}\PYG{p}{(}\PYG{n}{ANSI\PYGZus{}COLOR\PYGZus{}YELLOW}\PYG{l+s}{\PYGZdq{}Consumer\PYGZdq{}}\PYG{n}{ANSI\PYGZus{}COLOR\PYGZus{}RED}\PYG{l+s}{\PYGZdq{}}
    			\PYG{p}{(}\PYG{o}{\PYGZpc{}}\PYG{n}{d}\PYG{p}{)} \PYG{n}{is} \PYG{n}{done}\PYG{p}{.}\PYG{err}{\PYGZbs{}}\PYG{n}{n}\PYG{l+s}{\PYGZdq{}ANSI\PYGZus{}COLOR\PYGZus{}RESET, tid);}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{int} \PYG{n}{main}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{argc}\PYG{p}{,} \PYG{k+kt}{char} \PYG{o}{**}\PYG{n}{argv}\PYG{p}{)\PYGZob{}}
	\PYG{c+c1}{// Validate inputs}
	\PYG{k+kt}{bool} \PYG{n}{DEBUG} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
	\PYG{k}{if}\PYG{p}{(}\PYG{n}{argc} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{2} \PYG{o}{||} \PYG{o}{!}\PYG{n}{isdigit}\PYG{p}{(}\PYG{o}{*}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{])} \PYG{o}{||} \PYG{o}{!}\PYG{n}{isdigit}\PYG{p}{(}\PYG{o}{*}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{2}\PYG{p}{]))\PYGZob{}}
		\PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Usage: \PYGZpc{}s [number of producers] [number of consumers]}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,} \PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]);}
		\PYG{k}{return} \PYG{l+m+mi}{0}\PYG{p}{;}
	\PYG{p}{\PYGZcb{}}
	\PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}This program will go through \PYGZdq{}}\PYG{n}{ANSI\PYGZus{}COLOR\PYGZus{}RED}\PYG{l+s}{\PYGZdq{}5\PYGZdq{}}\PYG{n}{ANSI\PYGZus{}COLOR\PYGZus{}RESET}\PYG{l+s}{\PYGZdq{}}
    			\PYG{n}{production} \PYG{n}{and} \PYG{n}{consumtion} \PYG{n}{cycles}\PYG{p}{.}\PYG{err}{\PYGZbs{}}\PYG{n}{n}\PYG{l+s}{\PYGZdq{});}
	\PYG{k+kt}{int} \PYG{n}{num\PYGZus{}producers} \PYG{o}{=} \PYG{n}{atoi}\PYG{p}{(}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]);}
	\PYG{k+kt}{int} \PYG{n}{num\PYGZus{}consumers} \PYG{o}{=} \PYG{n}{atoi}\PYG{p}{(}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{2}\PYG{p}{]);}
	\PYG{k+kt}{int} \PYG{n}{totalThreads} \PYG{o}{=} \PYG{n}{num\PYGZus{}producers}\PYG{o}{+}\PYG{n}{num\PYGZus{}consumers}\PYG{p}{;}
	\PYG{n}{pthread\PYGZus{}t} \PYG{n}{threads}\PYG{p}{[}\PYG{n}{totalThreads}\PYG{o}{+}\PYG{l+m+mi}{10}\PYG{p}{];}

	\PYG{c+c1}{// Create all producers}
	\PYG{k}{for}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{i}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;} \PYG{n}{i}\PYG{o}{\PYGZlt{}}\PYG{n}{num\PYGZus{}producers}\PYG{p}{;} \PYG{n}{i}\PYG{o}{++}\PYG{p}{)\PYGZob{}}
		\PYG{k}{if}\PYG{p}{(}\PYG{n}{pthread\PYGZus{}create}\PYG{p}{(}\PYG{o}{\PYGZam{}}\PYG{n}{threads}\PYG{p}{[}\PYG{n}{i}\PYG{p}{],} \PYG{n+nb}{NULL}\PYG{p}{,} \PYG{n}{producer}\PYG{p}{,} \PYG{n+nb}{NULL}\PYG{p}{))\PYGZob{}}
			\PYG{n}{fprintf}\PYG{p}{(}\PYG{n}{stderr}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}Error creating producer thread.}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{);}
			\PYG{k}{return} \PYG{l+m+mi}{2}\PYG{p}{;}
		\PYG{p}{\PYGZcb{}}
	\PYG{p}{\PYGZcb{}}

	\PYG{c+c1}{// Create all consumers}
	\PYG{k}{for}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{i}\PYG{o}{=}\PYG{n}{num\PYGZus{}producers}\PYG{p}{;} \PYG{n}{i}\PYG{o}{\PYGZlt{}}\PYG{n}{totalThreads}\PYG{p}{;} \PYG{n}{i}\PYG{o}{++}\PYG{p}{)\PYGZob{}}
		\PYG{k}{if}\PYG{p}{(}\PYG{n}{pthread\PYGZus{}create}\PYG{p}{(}\PYG{o}{\PYGZam{}}\PYG{n}{threads}\PYG{p}{[}\PYG{n}{i}\PYG{p}{],} \PYG{n+nb}{NULL}\PYG{p}{,} \PYG{n}{consumer}\PYG{p}{,} \PYG{n+nb}{NULL}\PYG{p}{))\PYGZob{}}
			\PYG{n}{fprintf}\PYG{p}{(}\PYG{n}{stderr}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}Error creating consumer thread.}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{);}
			\PYG{k}{return} \PYG{l+m+mi}{2}\PYG{p}{;}
		\PYG{p}{\PYGZcb{}}
	\PYG{p}{\PYGZcb{}}

	\PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}going into joining threads.}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{);}
	\PYG{c+c1}{// Wait for all threads to finish}
	\PYG{k}{for}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{i}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;} \PYG{n}{i}\PYG{o}{\PYGZlt{}}\PYG{n}{totalThreads}\PYG{p}{;} \PYG{n}{i}\PYG{o}{++}\PYG{p}{)\PYGZob{}}
		\PYG{k}{if}\PYG{p}{(}\PYG{n}{pthread\PYGZus{}join}\PYG{p}{(}\PYG{n}{threads}\PYG{p}{[}\PYG{n}{i}\PYG{p}{],} \PYG{n+nb}{NULL}\PYG{p}{))\PYGZob{}}
			\PYG{n}{fprintf}\PYG{p}{(}\PYG{n}{stderr}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}Error joining thread.}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{);}
			\PYG{k}{return} \PYG{l+m+mi}{2}\PYG{p}{;}
		\PYG{p}{\PYGZcb{}}
	\PYG{p}{\PYGZcb{}}
	\PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}MAXBUFFER = \PYGZpc{}d, totalThreads = \PYGZpc{}d}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,} \PYG{n}{MAXBUFFER}\PYG{p}{,} \PYG{n}{totalThreads}\PYG{p}{);}
	\PYG{k}{if}\PYG{p}{(}\PYG{n}{DEBUG}\PYG{p}{)}
		\PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Non\PYGZhy{}empty buffer contents:}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{);}
	\PYG{k}{if}\PYG{p}{(}\PYG{n}{DEBUG}\PYG{p}{)}
		\PYG{k}{for}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{i}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;} \PYG{n}{i}\PYG{o}{\PYGZlt{}}\PYG{n}{MAXBUFFER}\PYG{p}{;} \PYG{n}{i}\PYG{o}{++}\PYG{p}{)\PYGZob{}}
			\PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}\PYGZpc{}i}\PYG{l+s+se}{\PYGZbs{}t}\PYG{l+s}{Number=\PYGZpc{}d, sleep=\PYGZpc{}d}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,}\PYG{n}{i}\PYG{p}{,}
            		\PYG{n}{buffer}\PYG{p}{[}\PYG{n}{i}\PYG{p}{].}\PYG{n}{number}\PYG{p}{,} \PYG{n}{buffer}\PYG{p}{[}\PYG{n}{i}\PYG{p}{].}\PYG{n}{consumer\PYGZus{}sleep}\PYG{p}{);}
		\PYG{p}{\PYGZcb{}}
	\PYG{k}{return} \PYG{l+m+mi}{0}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
