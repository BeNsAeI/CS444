- CPU higherarchy:
- Register
- Cache
- RAM
- storage

OS resource management:
- Storage
- CPU
- I/O
 - Controllers (PIC - APIC)
 - drivers
 - devices
 - interrupt driven
 - DMA (auxilary CPU just for I/O)
 - poll (busy waiting)
- Busses
 - PCI SCSI
 - USB ISA
 - PCIe (P2P protocol not really a bus)
 - plug-n-play
 - BIOS / EFI / UEFI
 ______________________________________________

Types of operating systems:

- meinframes (IBM Z series)
 - Large machines (large users)

- Server OS
 - No direct user shell other than specific protocols
 - in reality they  don't exist anymore

- Multiprocessor OS
 - compatible with multiple processor
 - non uniform memory access
 - don't exist anymore

- PC OS

- Mobile OS
 - EPOC, Symbian, QNX

- Embedded OS
 - Solved similar problems to Mobile OS but from different perspective
 - QNX, vxworks *, embedded linux 
 - realtime systems (vs General purpose OS)
  - soft and hard(make our deadlines, schedule down to cycle accurace)
  - RT linux (soft)
  - QNX and vxworks (hard)

Combination of Server OS, Multiprocessor OS and PC os are the modern OS

Structural component of calssifying OS:
- Monolithic (Linux)
 - Single address space
- Layered (Don't practically exist)
 - Rings: OS 360
  - boot at ring 0
  - kernel ring 1
  - system interface ring 2
  - User interface ring 3
- Micro- Kernels (Darvin(Mac OS))
 - every module and major compon2ent exists as a process
 - each communicate with kernel
 - change scheduler without rebooting
 - easy to recover from crash
- Hybrid (Windows)
 - MinWin (minimal windows)

___________________________________________________________

Process* : instance of running program (core image and additional information)

- Program text (Code)
- (CPU) state (status information)
 - all runtime information
- Core Image (memory)

*Inherently active

