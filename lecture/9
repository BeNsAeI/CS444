- crypto loop
- do not write the block driver
- phymem
 - takes advantage of /dev/mem (physical memory)
  - scanmem? (good but won't be installed on os-class)
___________________________________

Interrupts:
- Interrupts need to be registered (sharable, not sharable)
- Check if the interrupt belongs to you
 - if the answer is no, drop out quickly
- How does this interrupt look like
 - Ask the hardware if they raised an interrupt, if the answer is yes, that is your device and you are the reposnible driver
- Top half: hardware critical things
- buttom half: line share (later)

Bottom half:
- handle IH defficiencies in interrupt handles: (issues)
 - Interrupt handlers are time critical
 - Can't sleep or block
 - some interrupts have to be disabled
 - disabled? that means we are missing some interrupts
 - asyncronis 
-Important questions to ask:
 - Is code time sensetive?
  - yes: Interrupt handler
  - no: bottom half
 - is code related to hardware? (direct hardware comunication)
  - yes: interrupt handler
  - no: bottom half
  (serial is clock based not interrupt)
 - Can we be interrupted?
  - yes: bottom half
  - no: Interrupt handler (Top half)
 - Anything else?
  - bottom half

Multiple types of buttom half:
- bh (bottom half)
 - depprecated, usable, legacy
- Soft IRQs
 - Not signals
 - cannot be created dynamically
 - cannot disable other soft IRQs
 - processed in numerical order
 - no serialization gaurantees
 - they are not run in parallel on the same CPU
 - on multiple cores, memory access is NOT SAFE
 - do not use there is only 7 of them
 - Ksoftirqd/<logical core number>
 - hardware dependent
- Tasklets
 - no tasks or processes or anything of taht nature
 - based on soft IRQ
 - serialization gaurantee:
  - no two tasklets run at the same time ever (regardless of number of queues)
 - dynamically created
 - still ca't sleep, block or allocate memory
 - part of timer interrupt
 - Ksoftirqd/<logical core number>
 - use if you do not need blocking
- Work queue
 - do not use
 - everything here gets added as a process on run queue
 - can sleep, schedule, allocate memory or block
 - concurrency
 - dynamic buffer and memory allocation
 - use if you need to block
